@using Microsoft.Ajax.Utilities
@model Inkopslista.ViewModels.DetailsShoppinglistViewModel

@{
    ViewBag.Title = "Inköpslista";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Inköpslista - @Model.Shoppinglist.Name</h2>

<h4>
    @Html.ActionLink("TIllbaka", "Index", "Shoppinglist", null, new { @class = "btn btn-primary" })
    @Html.ActionLink("Lägg till produkt", "NewProduct", "Shoppinglist", new { id = Model.Shoppinglist.Id }, new { @class = "btn btn-primary" })
    @if (Model.Products.Any())
    {
        @Html.ActionLink("Totalt näringsinnehåll", "Total", "Shoppinglist", new { id = Model.Shoppinglist.Id }, new { @class = "btn btn-primary", style = "margin-right:4px;" })

        @Html.ActionLink("Skapa recept", "Recipe", "Shoppinglist", new { id = Model.Shoppinglist.Id }, new { @class = "btn btn-primary" })
    }
</h4>
    <table id="ingredients" class="table table-bordered table-hover">
        <thead>
            <tr bgcolor="#f5f5f5">
                <th>Vara:</th>
                <th>Mängd (g):</th>
                <th>Pris/kg:</th>
                <th>Pris:</th>
                <th>Ändra:</th>
            </tr>
        </thead>
        <tbody></tbody>
        <tfoot>
            <tr bgcolor="#f5f5f5">
                <td></td>
                <td></td>
                <td><b>Totalt pris: </b></td>
                <td></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
@section scripts
{
    <script>
        $(document).ready(function() {
            table1 = $("#ingredients").DataTable({
                    "language": {
                        "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Swedish.json"
                    },

                    ajax: {
                        type: "GET",
                        url: "/api/shoppinglists/GetProducts/" + @Html.Raw(Json.Encode(Model.Shoppinglist.Id)),
                        datatype: "json",
                        dataSrc: ""
                    },
                    columns: [
                        {
                            data: "food",
                            render: function(data, type, product) {
                                return "<img src='../../Icons/" +
                                    product.categoryType.icon +
                                    "' width='15' height='15' title='" +
                                    product.categoryType.name +
                                    "'/> " +
                                    "<a href='/Products/Details/" +
                                    product.id +
                                    "'>" +
                                    product.food.name +
                                    "</a>";
                            }
                        },
                        {
                            data: "mass",
                            render: function (data, type, product) {
                                return product.mass + " g";
                            }
                        },
                        {
                            data: "pricePerKg",
                            render: function (data, type, product) {
                                return product.pricePerKg + " kr";
                            }
                        },
                        {
                            data: "priceTotal",
                            render: function (data, type, product) {
                                return product.priceTotal + " kr";
                            }
                        },
                        {
                            data: "id",
                            render:
                                function(data) {
                                    return "<input id='hiddenid' type='hidden' value='" +
                                        data +
                                        "'>" +
                                        "<a href='#!' class='js-edit' " +
                                        "data-ingredient-id=" +
                                        data +
                                        ">" +
                                        "<img src = '../../Icons/edit.svg' / " +
                                        "width='15' height='15' style='vertical-align:top'>" +
                                        "<img src = '../../Icons/save.svg' / " +
                                        "width='15' height='15' style='vertical-align:top;display: none'></a> " +
                                        "<a href='#!' class='js-delete' " +
                                        "data-ingredient-id=" +
                                        data +
                                        ">" +
                                        "<img src = '../../Icons/delete.svg' / " +
                                        "width='15' height='15' style='vertical-align:top'></a>";
                                },
                            sortable: false
                        }
                    ],
                    footerCallback: function(row, data, start, end, display) {
                        var api = this.api(), data;
                        var COLNUMBER = 3;
                        var pageTotal = 0;
                        var total = 0;


                        // Total over all pages
                        if (api.column(COLNUMBER).data().length) {
                            total = api
                                .column(COLNUMBER)
                                .data()
                                .reduce(function(a, b) {
                                    return a + b;
                                })
                        } else {
                            total = 0
                        };

                        // Total over this page
                        if (api.column(COLNUMBER).data().length) {
                            pageTotal = api
                                .column(COLNUMBER, { page: 'current' })
                                .data()
                                .reduce(function(a, b) {
                                    return a + b;
                                })
                        } else {
                            pageTotal = 0
                        };

                        $(api.column(COLNUMBER).footer()).html(
                            pageTotal + 'kr (' + total + 'kr)'
                        );
                    }
            }),
                $("#ingredients ").on("click",
                    ".js-edit",
                    function() {
                        $(this).removeClass().addClass("js-save");
                        $('img:visible', this).hide().siblings().show();
                        var $row = $(this).closest("tr").off("mousedown");
                        var $tds = $row.find("td").not(':first').not(':nth-child(4)').not(':last');

                        $.each($tds,
                            function(i, el) {
                                var txt = $(this).text();
                                $(this).html("").append("<input type='text' value=\"" +
                                    (txt.replace(' g', '')).replace(' kr', '') +
                                    "\">");
                            });

                    }),
                $("#ingredients ").on("click",
                    ".js-save",
                    function() {
                        $('img:visible', this).hide().siblings().show();

                        $(this).removeClass().addClass("js-edit");
                        var $row = $(this).closest("tr");
                        var $tds = $row.find("td").not(':first').not(':nth-child(4)');

                        var obj = {};;
                        $.each($tds,
                            function(i, el) {
                                var txt = $(this).find("input").val();
                                if (i == 0) {
                                    obj.Mass = txt;
                                    $(this).html(txt + " g");
                                } else if (i == 1) {
                                    obj.PricePerKg = txt;
                                    $(this).html(txt + " kr");
                                } else if (i == 2) {
                                    obj.Id = $(this).find("input").val();
                                }
                            });

                        console.log(JSON.stringify(obj));

                        $.ajax({
                            url: "/api/shoppinglists/UpdateProduct/",
                            type: "POST",
                            data: JSON.stringify(obj),
                            dataType: "json",
                            contentType: "application/json"
                        }).done(function(newProduct) {
                            table1.row($row).data(newProduct).draw();
                        });
                    }),
                $("#ingredients").on("click",
                    ".js-delete",
                    function() {
                        var button = $(this);

                        bootbox.confirm("Är du säker på att du vill ta bort denna produkt?",
                            function(result) {
                                if (result) {
                                    $.ajax({
                                        url: "/api/shoppinglists/DeleteIngredient/" + button.attr("data-ingredient-id"),
                                        method: "DELETE",
                                        success: function() {

                                            table1.row( button.parents("tr") ).remove().draw();
                                        }
                                    });
                                }
                            });
                    });
        });

    </script>
}
